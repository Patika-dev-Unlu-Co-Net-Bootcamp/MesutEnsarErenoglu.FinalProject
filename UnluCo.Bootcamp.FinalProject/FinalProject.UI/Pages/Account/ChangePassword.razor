@page "/accounts/changepassword/{key}"
@inject IAccountClientService accountService
@inject NavigationManager navManager

<div class="col-sm-6 mx-auto">
    <h3 class="text-center">
        Şifremi Unuttum
    </h3>
    <EditForm Model="@changeUserPassword" OnValidSubmit="@Submit">
        <DataAnnotationsValidator />

        <div class="mb-3">
            <label for="password" class="col-form-label">Yeni Şifre</label>
            <InputText id="password" type="password" @bind-Value="changeUserPassword.newPassword" class="form-control" />
            <ValidationMessage For="() => changeUserPassword.newPassword" class="invalid-feedback" />
        </div>
        <div class="mb-3">
            <label for="passwordConfirm" class="col-form-label">Yeni Şifre Tekrar</label>
            <InputText id="passwordConfirm" type="password" @bind-Value="changeUserPassword.newPasswordConfirm" class="form-control" />
            <ValidationMessage For="() => changeUserPassword.newPasswordConfirm" class="invalid-feedback" />
        </div>

        <button type="submit" class="btn btn-primary">Yeni Şifre Talebi</button>
    </EditForm>
</div>

@code {
    [Parameter]
    public string key { get; set; }

    public ChangeUserPassword changeUserPassword = new ChangeUserPassword();

    private async Task Submit()
    {
        var result = await accountService.ChangeUserPassword(key, changeUserPassword);

        if (result)
        {

            navManager.NavigateTo("/");
        }
        else
        {
            navManager.NavigateTo("/error");
        }


    }
}
